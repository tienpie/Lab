# -*- coding: utf-8 -*-
import numpy as np

# Kh·ªüi t·∫°o ma tr·∫≠n 3x3 v·ªõi gi√° tr·ªã 99
board = np.full((3, 3), 99)

# Hi·ªÉn th·ªã b√†n c·ªù
def print_board():
    symbols = {99: ' ', 0: 'O', 1: 'X'}
    for row in board:
        print(" | ".join(symbols[cell] for cell in row))
        print("-" * 9)

# Ki·ªÉm tra ƒëi·ªÅu ki·ªán th·∫Øng
def check_winner():
    for i in range(3):
        # Ki·ªÉm tra h√†ng v√† c·ªôt
        if (board[i, 0] == board[i, 1] == board[i, 2] != 99) or \
           (board[0, i] == board[1, i] == board[2, i] != 99):
            return True
        
    # Ki·ªÉm tra ƒë∆∞·ªùng ch√©o
    if (board[0, 0] == board[1, 1] == board[2, 2] != 99) or \
       (board[0, 2] == board[1, 1] == board[2, 0] != 99):
        return True
    
    return False

# Ch·∫°y tr√≤ ch∆°i
def play_game():
    turn = 1  # B·∫Øt ƒë·∫ßu v·ªõi X (1)
    moves = 0
    print_board()
    
    while moves < 9:
        player = "X" if turn == 1 else "O"
        try:
            row, col = map(int, input(f"Ng∆∞·ªùi ch∆°i {player}, nh·∫≠p h√†ng v√† c·ªôt (0-2, c√°ch nhau b·ªüi d·∫•u c√°ch): ").split())
            if board[row, col] == 99:  # V·ªã tr√≠ tr·ªëng
                board[row, col] = turn
                print_board()
                if check_winner():
                    print(f"üéâ Ng∆∞·ªùi ch∆°i {player} th·∫Øng! üéâ")
                    return
                turn = 1 - turn  # Chuy·ªÉn l∆∞·ª£t
                moves += 1
            else:
                print("‚ö†Ô∏è √î ƒë√£ ƒë∆∞·ª£c ch·ªçn, h√£y nh·∫≠p l·∫°i!")
        except (ValueError, IndexError):
            print("‚ö†Ô∏è Vui l√≤ng nh·∫≠p hai s·ªë trong kho·∫£ng [0,2]!")

    print("‚öñÔ∏è Tr√≤ ch∆°i h√≤a!")

# B·∫Øt ƒë·∫ßu tr√≤ ch∆°i
play_game()
